<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0818.1843                               -->
<workbook original-version='18.1' source-build='2021.2.2 (20212.21.0818.1843)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='world-population-by-world-regions-post-1820' inline='true' name='federated.0l0h7m2129vabf1cmyzc60jdndp9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='world-population-by-world-regions-post-1820' name='textscan.0e8pw0t0dtdlzg11ptozn1tp35mc'>
            <connection class='textscan' directory='/Users/mansikhanna/Downloads' filename='world-population-by-world-regions-post-1820.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0e8pw0t0dtdlzg11ptozn1tp35mc' name='world-population-by-world-regions-post-1820.csv' table='[world-population-by-world-regions-post-1820#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='integer' name='Population (historical estimates)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0e8pw0t0dtdlzg11ptozn1tp35mc' name='world-population-by-world-regions-post-1820.csv' table='[world-population-by-world-regions-post-1820#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='integer' name='Population (historical estimates)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[world-population-by-world-regions-post-1820.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[world-population-by-world-regions-post-1820.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world-population-by-world-regions-post-1820.csv_14A0CB95958C4A76B76BBC0505575A90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[world-population-by-world-regions-post-1820.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world-population-by-world-regions-post-1820.csv_14A0CB95958C4A76B76BBC0505575A90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[world-population-by-world-regions-post-1820.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world-population-by-world-regions-post-1820.csv_14A0CB95958C4A76B76BBC0505575A90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population (historical estimates)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (historical estimates)]</local-name>
            <parent-name>[world-population-by-world-regions-post-1820.csv]</parent-name>
            <remote-alias>Population (historical estimates)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[world-population-by-world-regions-post-1820.csv_14A0CB95958C4A76B76BBC0505575A90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='world-population-by-world-regions-post-1820.csv' datatype='table' name='[__tableau_internal_object_id__].[world-population-by-world-regions-post-1820.csv_14A0CB95958C4A76B76BBC0505575A90]' role='measure' type='quantitative' />
      <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Entity,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Entity:nk]' />
          <groupfilter function='level-members' level='[none:Year:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Entity,Year)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Entity:nk]' />
          <groupfilter function='level-members' level='[none:Year:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Entity:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Svalbard and Jan Mayen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Barthlemy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='world-population-by-world-regions-post-1820.csv' id='world-population-by-world-regions-post-1820.csv_14A0CB95958C4A76B76BBC0505575A90'>
            <properties context=''>
              <relation connection='textscan.0e8pw0t0dtdlzg11ptozn1tp35mc' name='world-population-by-world-regions-post-1820.csv' table='[world-population-by-world-regions-post-1820#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='integer' name='Year' ordinal='2' />
                  <column datatype='integer' name='Population (historical estimates)' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='world-population-by-world-regions-post-1820' name='federated.0l0h7m2129vabf1cmyzc60jdndp9' />
          </datasources>
          <datasource-dependencies datasource='federated.0l0h7m2129vabf1cmyzc60jdndp9'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population (historical estimates)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population (historical estimates)]' derivation='Sum' name='[sum:Population (historical estimates):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Entity:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Year:qk]' included-values='in-range'>
            <min>1925</min>
            <max>2021</max>
          </filter>
          <slices>
            <column>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Entity:nk]</column>
            <column>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Entity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[sum:Population (historical estimates):qk]</rows>
        <cols>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Year:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[sum:Population (historical estimates):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Entity:nk]</field>
                  <field>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Year:qk]</field>
                  <field>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[sum:Population (historical estimates):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Asia&quot;</value>
                <value>2017</value>
                <value>4517860329</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[sum:Population (historical estimates):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Entity:nk]</field>
                  <field>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Year:qk]</field>
                  <field>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[sum:Population (historical estimates):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Europe&quot;</value>
                <value>2017</value>
                <value>746596841</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{72638D66-87FF-497C-B741-9CDAA8C3C498}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Entity:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Entity:nk]</field>
            <field>[federated.0l0h7m2129vabf1cmyzc60jdndp9].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71DFC0A9-CCA7-4155-8336-5BA0C59A2661}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
